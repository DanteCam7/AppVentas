// Generated by view binder compiler. Do not edit!
package com.example.agrotradehub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.agrotradehub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TopsettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView cancelButton;

  @NonNull
  public final Switch conExistencia;

  @NonNull
  public final TextView createText;

  @NonNull
  public final LinearLayout layout1;

  @NonNull
  public final LinearLayout layout2;

  @NonNull
  public final LinearLayout layout4;

  @NonNull
  public final LinearLayout layoutCerrarSesion;

  @NonNull
  public final LinearLayout layoutEntrega;

  @NonNull
  public final LinearLayout layoutHistorial;

  @NonNull
  public final LinearLayout layoutIniciarSesion;

  @NonNull
  public final LinearLayout layoutVolverVistaSupervisor;

  @NonNull
  public final Switch moneda;

  private TopsettingsBinding(@NonNull LinearLayout rootView, @NonNull ImageView cancelButton,
      @NonNull Switch conExistencia, @NonNull TextView createText, @NonNull LinearLayout layout1,
      @NonNull LinearLayout layout2, @NonNull LinearLayout layout4,
      @NonNull LinearLayout layoutCerrarSesion, @NonNull LinearLayout layoutEntrega,
      @NonNull LinearLayout layoutHistorial, @NonNull LinearLayout layoutIniciarSesion,
      @NonNull LinearLayout layoutVolverVistaSupervisor, @NonNull Switch moneda) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.conExistencia = conExistencia;
    this.createText = createText;
    this.layout1 = layout1;
    this.layout2 = layout2;
    this.layout4 = layout4;
    this.layoutCerrarSesion = layoutCerrarSesion;
    this.layoutEntrega = layoutEntrega;
    this.layoutHistorial = layoutHistorial;
    this.layoutIniciarSesion = layoutIniciarSesion;
    this.layoutVolverVistaSupervisor = layoutVolverVistaSupervisor;
    this.moneda = moneda;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TopsettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TopsettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.topsettings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TopsettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelButton;
      ImageView cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.conExistencia;
      Switch conExistencia = ViewBindings.findChildViewById(rootView, id);
      if (conExistencia == null) {
        break missingId;
      }

      id = R.id.createText;
      TextView createText = ViewBindings.findChildViewById(rootView, id);
      if (createText == null) {
        break missingId;
      }

      id = R.id.layout1;
      LinearLayout layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.layout2;
      LinearLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.layout4;
      LinearLayout layout4 = ViewBindings.findChildViewById(rootView, id);
      if (layout4 == null) {
        break missingId;
      }

      id = R.id.layoutCerrarSesion;
      LinearLayout layoutCerrarSesion = ViewBindings.findChildViewById(rootView, id);
      if (layoutCerrarSesion == null) {
        break missingId;
      }

      id = R.id.layoutEntrega;
      LinearLayout layoutEntrega = ViewBindings.findChildViewById(rootView, id);
      if (layoutEntrega == null) {
        break missingId;
      }

      id = R.id.layoutHistorial;
      LinearLayout layoutHistorial = ViewBindings.findChildViewById(rootView, id);
      if (layoutHistorial == null) {
        break missingId;
      }

      id = R.id.layoutIniciarSesion;
      LinearLayout layoutIniciarSesion = ViewBindings.findChildViewById(rootView, id);
      if (layoutIniciarSesion == null) {
        break missingId;
      }

      id = R.id.layoutVolverVistaSupervisor;
      LinearLayout layoutVolverVistaSupervisor = ViewBindings.findChildViewById(rootView, id);
      if (layoutVolverVistaSupervisor == null) {
        break missingId;
      }

      id = R.id.moneda;
      Switch moneda = ViewBindings.findChildViewById(rootView, id);
      if (moneda == null) {
        break missingId;
      }

      return new TopsettingsBinding((LinearLayout) rootView, cancelButton, conExistencia,
          createText, layout1, layout2, layout4, layoutCerrarSesion, layoutEntrega, layoutHistorial,
          layoutIniciarSesion, layoutVolverVistaSupervisor, moneda);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
